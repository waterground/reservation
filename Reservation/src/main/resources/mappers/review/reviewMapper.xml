<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="com.sjh.web.mappers.review.ReviewMapper">
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		review(member_id,product_id,rating,content)
		VALUES(#{memberId}, (SELECT product_id FROM reservation WHERE id=#{reservationId}), #{rating}, #{content})
	</insert>
	
	<insert id="insertRelation">
		INSERT INTO
			reservation_has_review(reservation_id, review_id)
		VALUES (#{reservationId}, (SELECT MAX(id) FROM review))
	</insert>
	
	<insert id="insertImg" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO 
			file(name)
		VALUES 
			(#{name})
	</insert>
	
	<insert id="insertImgRelation">
		INSERT INTO 
			review_image(review_id, file_id)
		VALUES 
			(#{reviewId}, #{fileId})
	</insert>

	<select id="select" parameterType="java.lang.Integer" resultMap="reviewResultMap">
		SELECT 
			r.id, r.member_id, r.product_id
			, r.rating, r.content, r.date
			, file.id AS f_id, file.name AS file_name
		FROM review AS r
		JOIN review_image AS ri
		ON r.id=ri.review_id
		JOIN file
		ON ri.file_id=file.id
		<if test="_parameter == 0">
			ORDER BY id DESC 
			LIMIT 0, 1;
		</if>
		<if test="_parameter != 0">
			WHERE r.id=#{id}
		</if>
	</select>
	
	<update id="updateRating">
		UPDATE product_info
		SET rating_avg=(SELECT AVG(rating) 
						FROM review 
						<if test="productId != 0">
							WHERE product_id=#{productId})
							WHERE product_id=#{productId}
						</if>
						<if test="productId == 0">
							WHERE product_id=(SELECT product_id 
											  FROM reservation 
											  WHERE id=#{reservationId}))
							WHERE product_id=(SELECT product_id 
											FROM reservation 
						 					WHERE id=#{reservationId})
						</if>
	</update>
	
	<select id="getRatingAvg" resultType="float">
		SELECT rating_avg
		FROM product_info
		WHERE product_id=#{productId}
	</select>

	<select id="listUp" resultMap="reviewResultMap">
		SELECT 
			r.id, r.member_id, r.product_id
			, r.rating, r.content, r.date
			, file.id AS f_id, file.name AS file_name
		FROM review AS r
		LEFT JOIN review_image AS ri
		ON r.id=ri.review_id
		LEFT JOIN file
		ON ri.file_id=file.id
		<where>
			<if test="productId != 0">
				AND r.product_id=#{productId}
			</if>
			<if test="memberId != null">
				AND r.member_id = #{memberId}
			</if>
		</where>
		ORDER BY date DESC
	</select>

	<delete id="delete">
		DELETE FROM review
		WHERE id=#{id}
	</delete>
	
	<delete id="deleteRelation">
		DELETE FROM reservation_has_review
		WHERE review_id=#{id}
	</delete>
	
	<delete id="deleteImg">
		DELETE FROM file
		WHERE name LIKE '${_parameter}_rw_%';
	</delete>
	
	<update id="update">
		UPDATE review
		SET content=#{content}
		WHERE id=#{id}
	</update>
	
	<resultMap id="reviewResultMap" type="ReviewDto">
		<id property="id" column="id"/>
		<result property="memberId" column="member_id"/>
		<result property="productId" column="product_id"/>
		<result property="rating" column="rating"/>
		<result property="content" column="content"/>
		<result property="date" column="date"/>
	
		<!-- 상세 이미지 -->		
		<collection property="imgList" ofType="FileDto" resultMap="fileResultMap"/>
	</resultMap>
	
	<resultMap id="fileResultMap" type="FileDto">
		<id property="id" column="f_id"/>
		<result property="name" column="file_name"/>
	</resultMap>
</mapper>